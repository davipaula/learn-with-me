{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { useCallback, useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Select, MenuItem, InputLabel, FormHelperText, FormControl, Chip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport { FieldTitle, useInput, useChoices } from 'ra-core';\nimport InputHelperText from './InputHelperText';\nimport Labeled from './Labeled';\nimport { LinearProgress } from '../layout';\n\nvar sanitizeRestProps = function (_a) {\n  var addLabel = _a.addLabel,\n      allowEmpty = _a.allowEmpty,\n      alwaysOn = _a.alwaysOn,\n      basePath = _a.basePath,\n      choices = _a.choices,\n      classNamInputWithOptionsPropse = _a.classNamInputWithOptionsPropse,\n      componenInputWithOptionsPropst = _a.componenInputWithOptionsPropst,\n      crudGetMInputWithOptionsPropsatching = _a.crudGetMInputWithOptionsPropsatching,\n      crudGetOInputWithOptionsPropsne = _a.crudGetOInputWithOptionsPropsne,\n      defaultValue = _a.defaultValue,\n      filter = _a.filter,\n      filterToQuery = _a.filterToQuery,\n      formClassName = _a.formClassName,\n      initializeForm = _a.initializeForm,\n      input = _a.input,\n      isRequired = _a.isRequired,\n      label = _a.label,\n      limitChoicesToValue = _a.limitChoicesToValue,\n      loaded = _a.loaded,\n      locale = _a.locale,\n      meta = _a.meta,\n      onChange = _a.onChange,\n      options = _a.options,\n      optionValue = _a.optionValue,\n      optionText = _a.optionText,\n      perPage = _a.perPage,\n      record = _a.record,\n      reference = _a.reference,\n      resource = _a.resource,\n      setFilter = _a.setFilter,\n      setPagination = _a.setPagination,\n      setSort = _a.setSort,\n      sort = _a.sort,\n      source = _a.source,\n      textAlign = _a.textAlign,\n      translate = _a.translate,\n      translateChoice = _a.translateChoice,\n      validation = _a.validation,\n      rest = __rest(_a, [\"addLabel\", \"allowEmpty\", \"alwaysOn\", \"basePath\", \"choices\", \"classNamInputWithOptionsPropse\", \"componenInputWithOptionsPropst\", \"crudGetMInputWithOptionsPropsatching\", \"crudGetOInputWithOptionsPropsne\", \"defaultValue\", \"filter\", \"filterToQuery\", \"formClassName\", \"initializeForm\", \"input\", \"isRequired\", \"label\", \"limitChoicesToValue\", \"loaded\", \"locale\", \"meta\", \"onChange\", \"options\", \"optionValue\", \"optionText\", \"perPage\", \"record\", \"reference\", \"resource\", \"setFilter\", \"setPagination\", \"setSort\", \"sort\", \"source\", \"textAlign\", \"translate\", \"translateChoice\", \"validation\"]);\n\n  return rest;\n};\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    chips: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    chip: {\n      margin: theme.spacing(1 / 4)\n    }\n  };\n}, {\n  name: 'RaSelectArrayInput'\n});\n/**\n * An Input component for a select box allowing multiple selections, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property as the option text\n * @example\n * const choices = [\n *    { id: 'programming', name: 'Programming' },\n *    { id: 'lifestyle', name: 'Lifestyle' },\n *    { id: 'photography', name: 'Photography' },\n * ];\n * <SelectArrayInput source=\"tags\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <SelectArrayInput source=\"authors\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <SelectArrayInput source=\"authors\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that will be cloned and receive\n * the related choice as the `record` prop. You can use Field components there.\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const FullNameField = ({ record }) => <span>{record.first_name} {record.last_name}</span>;\n * <SelectArrayInput source=\"authors\" choices={choices} optionText={<FullNameField />}/>\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'programming', name: 'myroot.tags.programming' },\n *    { id: 'lifestyle', name: 'myroot.tags.lifestyle' },\n *    { id: 'photography', name: 'myroot.tags.photography' },\n * ];\n */\n\nvar SelectArrayInput = function (props) {\n  var _a = props.choices,\n      choices = _a === void 0 ? [] : _a,\n      classesOverride = props.classes,\n      className = props.className,\n      format = props.format,\n      helperText = props.helperText,\n      label = props.label,\n      loaded = props.loaded,\n      loading = props.loading,\n      _b = props.margin,\n      margin = _b === void 0 ? 'dense' : _b,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      options = props.options,\n      optionText = props.optionText,\n      optionValue = props.optionValue,\n      parse = props.parse,\n      resource = props.resource,\n      source = props.source,\n      translateChoice = props.translateChoice,\n      validate = props.validate,\n      _c = props.variant,\n      variant = _c === void 0 ? 'filled' : _c,\n      rest = __rest(props, [\"choices\", \"classes\", \"className\", \"format\", \"helperText\", \"label\", \"loaded\", \"loading\", \"margin\", \"onBlur\", \"onChange\", \"onFocus\", \"options\", \"optionText\", \"optionValue\", \"parse\", \"resource\", \"source\", \"translateChoice\", \"validate\", \"variant\"]);\n\n  var classes = useStyles(props);\n  var inputLabel = useRef(null);\n\n  var _d = useState(0),\n      labelWidth = _d[0],\n      setLabelWidth = _d[1];\n\n  useEffect(function () {\n    // Will be null while loading and we don't need this fix in that case\n    if (inputLabel.current) {\n      setLabelWidth(inputLabel.current.offsetWidth);\n    }\n  }, []);\n\n  var _e = useChoices({\n    optionText: optionText,\n    optionValue: optionValue,\n    translateChoice: translateChoice\n  }),\n      getChoiceText = _e.getChoiceText,\n      getChoiceValue = _e.getChoiceValue;\n\n  var _f = useInput(__assign({\n    format: format,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    parse: parse,\n    resource: resource,\n    source: source,\n    validate: validate\n  }, rest)),\n      input = _f.input,\n      isRequired = _f.isRequired,\n      _g = _f.meta,\n      error = _g.error,\n      submitError = _g.submitError,\n      touched = _g.touched;\n\n  var renderMenuItemOption = useCallback(function (choice) {\n    return getChoiceText(choice);\n  }, [getChoiceText]);\n  var renderMenuItem = useCallback(function (choice) {\n    return choice ? React.createElement(MenuItem, {\n      key: getChoiceValue(choice),\n      value: getChoiceValue(choice)\n    }, renderMenuItemOption(choice)) : null;\n  }, [getChoiceValue, renderMenuItemOption]);\n\n  if (loading) {\n    return React.createElement(Labeled, {\n      label: label,\n      source: source,\n      resource: resource,\n      className: className,\n      isRequired: isRequired\n    }, React.createElement(LinearProgress, null));\n  }\n\n  return React.createElement(FormControl, __assign({\n    margin: margin,\n    className: classnames(classes.root, className),\n    error: touched && !!(error || submitError),\n    variant: variant\n  }, sanitizeRestProps(rest)), React.createElement(InputLabel, {\n    ref: inputLabel,\n    id: label + \"-outlined-label\",\n    error: touched && !!(error || submitError)\n  }, React.createElement(FieldTitle, {\n    label: label,\n    source: source,\n    resource: resource,\n    isRequired: isRequired\n  })), React.createElement(Select, __assign({\n    autoWidth: true,\n    labelId: label + \"-outlined-label\",\n    multiple: true,\n    error: !!(touched && (error || submitError)),\n    renderValue: function (selected) {\n      return React.createElement(\"div\", {\n        className: classes.chips\n      }, selected.map(function (item) {\n        return choices.find(function (choice) {\n          return getChoiceValue(choice) === item;\n        });\n      }).map(function (item) {\n        return React.createElement(Chip, {\n          key: getChoiceValue(item),\n          label: renderMenuItemOption(item),\n          className: classes.chip\n        });\n      }));\n    },\n    \"data-testid\": \"selectArray\"\n  }, input, {\n    value: input.value || []\n  }, options, {\n    labelWidth: labelWidth\n  }), choices.map(renderMenuItem)), React.createElement(FormHelperText, {\n    error: touched && !!(error || submitError)\n  }, React.createElement(InputHelperText, {\n    touched: touched,\n    error: error || submitError,\n    helperText: helperText\n  })));\n};\n\nSelectArrayInput.propTypes = {\n  choices: PropTypes.arrayOf(PropTypes.object),\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  label: PropTypes.string,\n  options: PropTypes.object,\n  optionText: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.element]).isRequired,\n  optionValue: PropTypes.string.isRequired,\n  resource: PropTypes.string,\n  source: PropTypes.string,\n  translateChoice: PropTypes.bool\n};\nSelectArrayInput.defaultProps = {\n  options: {},\n  optionText: 'name',\n  optionValue: 'id',\n  translateChoice: true\n};\nexport default SelectArrayInput;","map":{"version":3,"sources":["/node_modules/ra-ui-materialui/esm/input/SelectArrayInput.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","useCallback","useRef","useState","useEffect","PropTypes","Select","MenuItem","InputLabel","FormHelperText","FormControl","Chip","makeStyles","classnames","FieldTitle","useInput","useChoices","InputHelperText","Labeled","LinearProgress","sanitizeRestProps","_a","addLabel","allowEmpty","alwaysOn","basePath","choices","classNamInputWithOptionsPropse","componenInputWithOptionsPropst","crudGetMInputWithOptionsPropsatching","crudGetOInputWithOptionsPropsne","defaultValue","filter","filterToQuery","formClassName","initializeForm","input","isRequired","label","limitChoicesToValue","loaded","locale","meta","onChange","options","optionValue","optionText","perPage","record","reference","resource","setFilter","setPagination","setSort","sort","source","textAlign","translate","translateChoice","validation","rest","useStyles","theme","root","chips","display","flexWrap","chip","margin","spacing","name","SelectArrayInput","props","classesOverride","classes","className","format","helperText","loading","_b","onBlur","onFocus","parse","validate","_c","variant","inputLabel","_d","labelWidth","setLabelWidth","current","offsetWidth","_e","getChoiceText","getChoiceValue","_f","_g","error","submitError","touched","renderMenuItemOption","choice","renderMenuItem","createElement","key","value","ref","id","autoWidth","labelId","multiple","renderValue","selected","map","item","find","propTypes","arrayOf","object","string","children","node","oneOfType","func","element","bool","defaultProps"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { useCallback, useRef, useState, useEffect, } from 'react';\nimport PropTypes from 'prop-types';\nimport { Select, MenuItem, InputLabel, FormHelperText, FormControl, Chip, } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport { FieldTitle, useInput, useChoices, } from 'ra-core';\nimport InputHelperText from './InputHelperText';\nimport Labeled from './Labeled';\nimport { LinearProgress } from '../layout';\nvar sanitizeRestProps = function (_a) {\n    var addLabel = _a.addLabel, allowEmpty = _a.allowEmpty, alwaysOn = _a.alwaysOn, basePath = _a.basePath, choices = _a.choices, classNamInputWithOptionsPropse = _a.classNamInputWithOptionsPropse, componenInputWithOptionsPropst = _a.componenInputWithOptionsPropst, crudGetMInputWithOptionsPropsatching = _a.crudGetMInputWithOptionsPropsatching, crudGetOInputWithOptionsPropsne = _a.crudGetOInputWithOptionsPropsne, defaultValue = _a.defaultValue, filter = _a.filter, filterToQuery = _a.filterToQuery, formClassName = _a.formClassName, initializeForm = _a.initializeForm, input = _a.input, isRequired = _a.isRequired, label = _a.label, limitChoicesToValue = _a.limitChoicesToValue, loaded = _a.loaded, locale = _a.locale, meta = _a.meta, onChange = _a.onChange, options = _a.options, optionValue = _a.optionValue, optionText = _a.optionText, perPage = _a.perPage, record = _a.record, reference = _a.reference, resource = _a.resource, setFilter = _a.setFilter, setPagination = _a.setPagination, setSort = _a.setSort, sort = _a.sort, source = _a.source, textAlign = _a.textAlign, translate = _a.translate, translateChoice = _a.translateChoice, validation = _a.validation, rest = __rest(_a, [\"addLabel\", \"allowEmpty\", \"alwaysOn\", \"basePath\", \"choices\", \"classNamInputWithOptionsPropse\", \"componenInputWithOptionsPropst\", \"crudGetMInputWithOptionsPropsatching\", \"crudGetOInputWithOptionsPropsne\", \"defaultValue\", \"filter\", \"filterToQuery\", \"formClassName\", \"initializeForm\", \"input\", \"isRequired\", \"label\", \"limitChoicesToValue\", \"loaded\", \"locale\", \"meta\", \"onChange\", \"options\", \"optionValue\", \"optionText\", \"perPage\", \"record\", \"reference\", \"resource\", \"setFilter\", \"setPagination\", \"setSort\", \"sort\", \"source\", \"textAlign\", \"translate\", \"translateChoice\", \"validation\"]);\n    return rest;\n};\nvar useStyles = makeStyles(function (theme) { return ({\n    root: {},\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: theme.spacing(1 / 4),\n    },\n}); }, { name: 'RaSelectArrayInput' });\n/**\n * An Input component for a select box allowing multiple selections, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property as the option text\n * @example\n * const choices = [\n *    { id: 'programming', name: 'Programming' },\n *    { id: 'lifestyle', name: 'Lifestyle' },\n *    { id: 'photography', name: 'Photography' },\n * ];\n * <SelectArrayInput source=\"tags\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <SelectArrayInput source=\"authors\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <SelectArrayInput source=\"authors\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that will be cloned and receive\n * the related choice as the `record` prop. You can use Field components there.\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const FullNameField = ({ record }) => <span>{record.first_name} {record.last_name}</span>;\n * <SelectArrayInput source=\"authors\" choices={choices} optionText={<FullNameField />}/>\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'programming', name: 'myroot.tags.programming' },\n *    { id: 'lifestyle', name: 'myroot.tags.lifestyle' },\n *    { id: 'photography', name: 'myroot.tags.photography' },\n * ];\n */\nvar SelectArrayInput = function (props) {\n    var _a = props.choices, choices = _a === void 0 ? [] : _a, classesOverride = props.classes, className = props.className, format = props.format, helperText = props.helperText, label = props.label, loaded = props.loaded, loading = props.loading, _b = props.margin, margin = _b === void 0 ? 'dense' : _b, onBlur = props.onBlur, onChange = props.onChange, onFocus = props.onFocus, options = props.options, optionText = props.optionText, optionValue = props.optionValue, parse = props.parse, resource = props.resource, source = props.source, translateChoice = props.translateChoice, validate = props.validate, _c = props.variant, variant = _c === void 0 ? 'filled' : _c, rest = __rest(props, [\"choices\", \"classes\", \"className\", \"format\", \"helperText\", \"label\", \"loaded\", \"loading\", \"margin\", \"onBlur\", \"onChange\", \"onFocus\", \"options\", \"optionText\", \"optionValue\", \"parse\", \"resource\", \"source\", \"translateChoice\", \"validate\", \"variant\"]);\n    var classes = useStyles(props);\n    var inputLabel = useRef(null);\n    var _d = useState(0), labelWidth = _d[0], setLabelWidth = _d[1];\n    useEffect(function () {\n        // Will be null while loading and we don't need this fix in that case\n        if (inputLabel.current) {\n            setLabelWidth(inputLabel.current.offsetWidth);\n        }\n    }, []);\n    var _e = useChoices({\n        optionText: optionText,\n        optionValue: optionValue,\n        translateChoice: translateChoice,\n    }), getChoiceText = _e.getChoiceText, getChoiceValue = _e.getChoiceValue;\n    var _f = useInput(__assign({ format: format,\n        onBlur: onBlur,\n        onChange: onChange,\n        onFocus: onFocus,\n        parse: parse,\n        resource: resource,\n        source: source,\n        validate: validate }, rest)), input = _f.input, isRequired = _f.isRequired, _g = _f.meta, error = _g.error, submitError = _g.submitError, touched = _g.touched;\n    var renderMenuItemOption = useCallback(function (choice) { return getChoiceText(choice); }, [\n        getChoiceText,\n    ]);\n    var renderMenuItem = useCallback(function (choice) {\n        return choice ? (React.createElement(MenuItem, { key: getChoiceValue(choice), value: getChoiceValue(choice) }, renderMenuItemOption(choice))) : null;\n    }, [getChoiceValue, renderMenuItemOption]);\n    if (loading) {\n        return (React.createElement(Labeled, { label: label, source: source, resource: resource, className: className, isRequired: isRequired },\n            React.createElement(LinearProgress, null)));\n    }\n    return (React.createElement(FormControl, __assign({ margin: margin, className: classnames(classes.root, className), error: touched && !!(error || submitError), variant: variant }, sanitizeRestProps(rest)),\n        React.createElement(InputLabel, { ref: inputLabel, id: label + \"-outlined-label\", error: touched && !!(error || submitError) },\n            React.createElement(FieldTitle, { label: label, source: source, resource: resource, isRequired: isRequired })),\n        React.createElement(Select, __assign({ autoWidth: true, labelId: label + \"-outlined-label\", multiple: true, error: !!(touched && (error || submitError)), renderValue: function (selected) { return (React.createElement(\"div\", { className: classes.chips }, selected\n                .map(function (item) {\n                return choices.find(function (choice) { return getChoiceValue(choice) === item; });\n            })\n                .map(function (item) { return (React.createElement(Chip, { key: getChoiceValue(item), label: renderMenuItemOption(item), className: classes.chip })); }))); }, \"data-testid\": \"selectArray\" }, input, { value: input.value || [] }, options, { labelWidth: labelWidth }), choices.map(renderMenuItem)),\n        React.createElement(FormHelperText, { error: touched && !!(error || submitError) },\n            React.createElement(InputHelperText, { touched: touched, error: error || submitError, helperText: helperText }))));\n};\nSelectArrayInput.propTypes = {\n    choices: PropTypes.arrayOf(PropTypes.object),\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    children: PropTypes.node,\n    label: PropTypes.string,\n    options: PropTypes.object,\n    optionText: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.func,\n        PropTypes.element,\n    ]).isRequired,\n    optionValue: PropTypes.string.isRequired,\n    resource: PropTypes.string,\n    source: PropTypes.string,\n    translateChoice: PropTypes.bool,\n};\nSelectArrayInput.defaultProps = {\n    options: {},\n    optionText: 'name',\n    optionValue: 'id',\n    translateChoice: true,\n};\nexport default SelectArrayInput;\n"]},"metadata":{},"sourceType":"module"}