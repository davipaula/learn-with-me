WEBVTT
Kind: captions
Language: en

00:00:22.840 --> 00:00:28.328
Dawn and the train are both breaking 
when Ethic and Hedge arrive in the woods.

00:00:28.328 --> 00:00:31.208
The adventurers 
have recovered the first artifact—

00:00:31.208 --> 00:00:32.705
the Node of Power—

00:00:32.705 --> 00:00:36.735
and have come to the 198forest 
in search of the second.

00:00:36.735 --> 00:00:41.846
Here they’re welcomed 
by the director of the colony, Octavia.

00:00:41.846 --> 00:00:44.446
She established this treehouse sanctuary

00:00:44.446 --> 00:00:47.415
after the robots freed everyone 
from having to work.

00:00:47.415 --> 00:00:50.705
It was meant to be a haven 
where people could follow their passions,

00:00:50.705 --> 00:00:53.075
take up crafts, and find fulfillment.

00:00:53.075 --> 00:00:55.338
Which they did… at first.

00:00:55.338 --> 00:00:57.848
Some years ago everyone forgot the point.

00:00:57.848 --> 00:00:59.478
They abandoned arts and crafts

00:00:59.478 --> 00:01:02.678
and instead just painted and exhibited 
pictures of themselves

00:01:02.678 --> 00:01:05.278
over, and over, and over.

00:01:05.278 --> 00:01:07.888
The location of the second artifact 
is no secret;

00:01:07.888 --> 00:01:11.348
it’s in a tower, 
guarded by a garrison of bots,

00:01:11.348 --> 00:01:15.498
a bottomless ravine, 
and who knows what other traps.

00:01:15.498 --> 00:01:18.656
As soon as the tower 
went up with the node inside,

00:01:18.656 --> 00:01:22.578
human communication 
across the land went dark.

00:01:22.578 --> 00:01:24.628
Octavia’s been after it for years,

00:01:24.628 --> 00:01:28.873
but try as she might, 
the defenses thwart her.

00:01:28.873 --> 00:01:33.131
In order to even get to the tower, 
the team will need a distraction.

00:01:33.131 --> 00:01:34.980
Octavia has an idea:

00:01:34.980 --> 00:01:39.111
stir up the people 
through some well-intentioned vandalism.

00:01:39.111 --> 00:01:42.943
The residents’ paintings are all squares 
that come in different sizes,

00:01:42.943 --> 00:01:46.551
all an odd number of pixels across.

00:01:46.551 --> 00:01:48.963
Helper-bots 
pick up the finished portraits

00:01:48.963 --> 00:01:52.811
and hang them in public places 
for everyone to admire.

00:01:52.811 --> 00:01:57.001
There’s a slim margin of time 
when Hedge can access the paintings.

00:01:57.001 --> 00:02:00.362
If he were to deface each one with an X,

00:02:00.362 --> 00:02:02.801
the people would blame the helper-bots,

00:02:02.801 --> 00:02:06.211
creating just the distraction 
the team needs.

00:02:06.211 --> 00:02:08.511
If only it were so easy.

00:02:08.511 --> 00:02:10.741
Hedge can’t just paint an X—

00:02:10.741 --> 00:02:14.862
his painting processor 
requires very specific instructions.

00:02:14.862 --> 00:02:17.492
Treating the paintings as square grids,

00:02:17.492 --> 00:02:21.492
he can fill in one pixel, 
or little square, at a time.

00:02:21.492 --> 00:02:25.212
He can move forwards 
and make 90 degree turns over the canvas,

00:02:25.212 --> 00:02:27.940
but can’t move diagonally.

00:02:27.940 --> 00:02:32.742
How does Ethic program Hedge 
to paint an X over each portrait?

00:02:32.742 --> 00:02:41.270
Pause now to figure it out for yourself.

00:02:41.270 --> 00:02:42.800
Here’s a hint.

00:02:42.800 --> 00:02:45.502
Try drawing a square grid like this,

00:02:45.502 --> 00:02:48.452
and simulating Hedge’s path over it.

00:02:48.452 --> 00:02:51.008
What patterns can you find to guide him?

00:02:51.008 --> 00:02:55.798
Pause now to figure it out for yourself.

00:02:55.798 --> 00:02:58.397
The challenge here 
is to craft a set of instructions

00:02:58.397 --> 00:03:01.188
that will work for any square grid.

00:03:01.188 --> 00:03:03.758
Fortunately, 
one of the strengths of programming

00:03:03.758 --> 00:03:06.738
is the flexibility 
to solve not just one problem,

00:03:06.738 --> 00:03:09.848
but a whole class of them all at once.

00:03:09.848 --> 00:03:14.649
It often helps to start with one case, 
and work towards the general.

00:03:14.649 --> 00:03:16.619
Let’s say we had this square.

00:03:16.619 --> 00:03:21.098
Hedge can measure the length of its sides 
and store that number as a variable.

00:03:21.098 --> 00:03:25.683
Now, what we need is a plan 
for how Hedge will paint an X,

00:03:25.683 --> 00:03:27.223
pixel by pixel.

00:03:27.223 --> 00:03:30.175
There’s more than one right answer 
for how to do this;

00:03:30.175 --> 00:03:31.658
let’s look at two.

00:03:31.658 --> 00:03:35.296
First, what if Hedge went row by row, 
like a typewriter?

00:03:35.296 --> 00:03:38.319
If it’s a 9 pixel by 9 pixel painting,

00:03:38.319 --> 00:03:42.628
in the first row he’d paint, 
skip 7, and then paint again.

00:03:42.628 --> 00:03:47.446
In the second row he’d skip the first, 
paint, skip 5, and paint.

00:03:47.446 --> 00:03:48.776
And so on.

00:03:48.776 --> 00:03:53.018
The pattern here is that for each row 
the pixels skipped at the beginning

00:03:53.018 --> 00:03:54.428
go up by one,

00:03:54.428 --> 00:03:58.078
and the pixels skipped in the middle 
go down by 2.

00:03:58.078 --> 00:04:01.158
Things get more complicated 
when Hedge reaches the center.

00:04:01.158 --> 00:04:04.199
Here there’s a row 
with just one pixel painted.

00:04:04.199 --> 00:04:06.168
Then the whole thing reverses—

00:04:06.168 --> 00:04:10.291
the number of pixels skipped 
goes down by one each time on the left,

00:04:10.291 --> 00:04:13.657
and up by two each time in the middle.

00:04:13.657 --> 00:04:17.111
Instructing Hedge to do this 
with a series of loops will work

00:04:17.111 --> 00:04:19.550
and is a perfectly fine solution.

00:04:19.550 --> 00:04:23.151
The main drawback is that 
this requires quite a bit of logic—

00:04:23.151 --> 00:04:26.171
knowing what to do in the middle, 
when to reverse the process,

00:04:26.171 --> 00:04:28.861
and exactly how to reverse it.

00:04:28.861 --> 00:04:30.645
So how might we approach this

00:04:30.645 --> 00:04:34.561
so that the logic remains consistent 
from start to finish?

00:04:34.561 --> 00:04:40.049
The key insight is to look at a grid 
as a series of concentric squares.

00:04:40.049 --> 00:04:42.689
Each square follows the same pattern—

00:04:42.689 --> 00:04:46.911
painted pixels in the corners, 
and unaltered pixels in between.

00:04:46.911 --> 00:04:50.329
So if we can figure out a way 
to paint one nested square,

00:04:50.329 --> 00:04:54.764
transition to the next, and repeat, 
we can paint them all.

00:04:54.764 --> 00:04:57.125
Painting the outermost one is easy.

00:04:57.125 --> 00:04:59.614
Start in a corner and paint that pixel.

00:04:59.614 --> 00:05:02.054
If we call the length of the painting n,

00:05:02.054 --> 00:05:04.804
fly forward n minus 1 spaces.

00:05:04.804 --> 00:05:07.304
Paint another pixel, and turn right.

00:05:07.304 --> 00:05:10.834
Now do the whole thing again… and again.

00:05:10.834 --> 00:05:16.029
Now move forward one less space, 
turn right, fly forward once,

00:05:16.029 --> 00:05:19.199
and Hedge will be 
in the next concentric square

00:05:19.199 --> 00:05:21.984
and ready to repeat the whole process.

00:05:21.984 --> 00:05:27.726
Each square is n minus 2 pixels smaller 
than the last in length and width,

00:05:27.726 --> 00:05:31.646
and we can follow this spiral pattern 
all the way to the center

00:05:31.646 --> 00:05:36.793
with a loop and a variable 
that tracks how far Hedge should fly.

00:05:36.793 --> 00:05:39.033
Is one of these methods 
better than the other?

00:05:39.033 --> 00:05:41.097
It really depends on what you value.

00:05:41.097 --> 00:05:44.527
The strength of the spiral 
is the simplicity of finding a pattern

00:05:44.527 --> 00:05:47.567
and reusing the same logic 
from start to finish.

00:05:47.567 --> 00:05:49.667
The advantage of the typewriter approach

00:05:49.667 --> 00:05:51.957
is that it’s a more generalized solution,

00:05:51.957 --> 00:05:56.027
meaning it can be adapted 
much more simply to fill in any pattern.

00:05:56.027 --> 00:05:59.298
For Ethic’s sake, 
either will do just fine.

00:05:59.298 --> 00:06:01.128
So here’s what happens.

00:06:01.128 --> 00:06:04.237
Hedge rapidly defaces 
all of the portraits.

00:06:04.237 --> 00:06:05.347
And within moments

00:06:05.347 --> 00:06:09.018
cries of anguish 
break out all over the forest.

00:06:09.018 --> 00:06:11.998
The garrison guarding the tower 
abandon their posts

00:06:11.998 --> 00:06:13.968
to calm the agitated people,

00:06:13.968 --> 00:06:16.958
and Ethic, Hedge, 
and Octavia slip through—

00:06:16.958 --> 00:06:19.998
and nearly slip 
into the depths of the gorge

00:06:19.998 --> 00:06:22.887
standing between them and the tower.

