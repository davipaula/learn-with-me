WEBVTT
Kind: captions
Language: en

00:00:13.407 --> 00:00:14.988
If there's one city in the world

00:00:15.012 --> 00:00:17.345
where it's hard to find
a place to buy or rent,

00:00:17.369 --> 00:00:18.519
it's Sydney.

00:00:19.043 --> 00:00:21.410
And if you've tried
to find a home here recently,

00:00:21.434 --> 00:00:23.274
you're familiar with the problem.

00:00:23.298 --> 00:00:25.312
Every time you walk into an open house,

00:00:25.336 --> 00:00:27.527
you get some information
about what's out there

00:00:27.551 --> 00:00:28.944
and what's on the market,

00:00:28.968 --> 00:00:30.398
but every time you walk out,

00:00:30.422 --> 00:00:33.636
you're running the risk
of the very best place passing you by.

00:00:33.660 --> 00:00:36.480
So how do you know when
to switch from looking

00:00:36.504 --> 00:00:38.066
to being ready to make an offer?

00:00:39.663 --> 00:00:42.064
This is such a cruel and familiar problem

00:00:42.088 --> 00:00:45.162
that it might come as a surprise
that it has a simple solution.

00:00:45.588 --> 00:00:46.791
37 percent.

00:00:46.815 --> 00:00:48.643
(Laughter)

00:00:48.667 --> 00:00:52.603
If you want to maximize the probability
that you find the very best place,

00:00:52.627 --> 00:00:55.452
you should look at 37 percent
of what's on the market,

00:00:55.476 --> 00:00:57.786
and then make an offer
on the next place you see,

00:00:57.810 --> 00:01:00.334
which is better than anything
that you've seen so far.

00:01:00.358 --> 00:01:04.163
Or if you're looking for a month,
take 37 percent of that time --

00:01:04.187 --> 00:01:07.102
11 days, to set a standard --

00:01:07.126 --> 00:01:08.701
and then you're ready to act.

00:01:09.829 --> 00:01:12.538
We know this because
trying to find a place to live

00:01:12.562 --> 00:01:14.887
is an example of an optimal
stopping problem.

00:01:14.911 --> 00:01:17.394
A class of problems that has been
studied extensively

00:01:17.418 --> 00:01:19.523
by mathematicians and computer scientists.

00:01:21.502 --> 00:01:24.021
I'm a computational cognitive scientist.

00:01:24.045 --> 00:01:26.005
I spend my time trying to understand

00:01:26.029 --> 00:01:27.827
how it is that human minds work,

00:01:27.851 --> 00:01:31.522
from our amazing successes
to our dismal failures.

00:01:32.552 --> 00:01:35.045
To do that, I think about
the computational structure

00:01:35.069 --> 00:01:37.728
of the problems
that arise in everyday life,

00:01:37.752 --> 00:01:40.127
and compare the ideal
solutions to those problems

00:01:40.151 --> 00:01:41.898
to the way that we actually behave.

00:01:42.725 --> 00:01:43.910
As a side effect,

00:01:43.934 --> 00:01:46.649
I get to see how applying
a little bit of computer science

00:01:46.673 --> 00:01:48.533
can make human decision-making easier.

00:01:49.828 --> 00:01:51.675
I have a personal motivation for this.

00:01:52.153 --> 00:01:55.319
Growing up in Perth
as an overly cerebral kid ...

00:01:55.343 --> 00:02:00.074
(Laughter)

00:02:00.098 --> 00:02:03.245
I would always try and act in the way
that I thought was rational,

00:02:03.269 --> 00:02:04.866
reasoning through every decision,

00:02:04.890 --> 00:02:07.293
trying to figure out
the very best action to take.

00:02:07.972 --> 00:02:10.162
But this is an approach
that doesn't scale up

00:02:10.186 --> 00:02:12.428
when you start to run into
the sorts of problems

00:02:12.452 --> 00:02:13.952
that arise in adult life.

00:02:13.976 --> 00:02:16.704
At one point, I even tried
to break up with my girlfriend

00:02:16.728 --> 00:02:20.078
because trying to take into account
her preferences as well as my own

00:02:20.102 --> 00:02:21.785
and then find perfect solutions --

00:02:21.809 --> 00:02:24.068
(Laughter)

00:02:24.092 --> 00:02:25.844
was just leaving me exhausted.

00:02:25.868 --> 00:02:28.401
(Laughter)

00:02:28.425 --> 00:02:30.854
She pointed out that I was taking
the wrong approach

00:02:30.878 --> 00:02:32.487
to solving this problem --

00:02:32.511 --> 00:02:33.893
and she later became my wife.

00:02:33.917 --> 00:02:35.979
(Laughter)

00:02:36.003 --> 00:02:40.974
(Applause)

00:02:40.998 --> 00:02:44.459
Whether it's as basic as trying to decide
what restaurant to go to

00:02:44.483 --> 00:02:48.538
or as important as trying to decide
who to spend the rest of your life with,

00:02:48.562 --> 00:02:50.937
human lives are filled
with computational problems

00:02:50.961 --> 00:02:55.157
that are just too hard to solve
by applying sheer effort.

00:02:55.650 --> 00:02:56.816
For those problems,

00:02:56.840 --> 00:02:58.801
it's worth consulting the experts:

00:02:58.825 --> 00:02:59.976
computer scientists.

00:03:00.000 --> 00:03:01.784
(Laughter)

00:03:01.808 --> 00:03:03.627
When you're looking for life advice,

00:03:03.651 --> 00:03:07.291
computer scientists probably aren't
the first people you think to talk to.

00:03:07.315 --> 00:03:09.190
Living life like a computer --

00:03:09.214 --> 00:03:11.792
stereotypically deterministic,
exhaustive and exact --

00:03:11.816 --> 00:03:13.368
doesn't sound like a lot of fun.

00:03:14.153 --> 00:03:17.080
But thinking about the computer science
of human decisions

00:03:17.104 --> 00:03:19.512
reveals that in fact,
we've got this backwards.

00:03:19.536 --> 00:03:21.734
When applied to the sorts
of difficult problems

00:03:21.758 --> 00:03:22.997
that arise in human lives,

00:03:23.021 --> 00:03:25.748
the way that computers
actually solve those problems

00:03:25.772 --> 00:03:28.668
looks a lot more like the way
that people really act.

00:03:29.267 --> 00:03:32.189
Take the example of trying to decide
what restaurant to go to.

00:03:33.090 --> 00:03:36.178
This is a problem that has
a particular computational structure.

00:03:36.202 --> 00:03:37.726
You've got a set of options,

00:03:37.750 --> 00:03:39.799
you're going to choose
one of those options,

00:03:39.823 --> 00:03:42.634
and you're going to face
exactly the same decision tomorrow.

00:03:42.658 --> 00:03:43.809
In that situation,

00:03:43.833 --> 00:03:46.128
you run up against
what computer scientists call

00:03:46.152 --> 00:03:48.524
the "explore-exploit trade-off."

00:03:49.115 --> 00:03:50.449
You have to make a decision

00:03:50.473 --> 00:03:52.807
about whether you're going
to try something new --

00:03:52.831 --> 00:03:55.014
exploring, gathering some information

00:03:55.038 --> 00:03:57.323
that you might be able
to use in the future --

00:03:57.347 --> 00:04:01.140
or whether you're going to go to a place
that you already know is pretty good --

00:04:01.164 --> 00:04:04.167
exploiting the information
that you've already gathered so far.

00:04:05.488 --> 00:04:08.584
The explore/exploit trade-off
shows up any time you have to choose

00:04:08.608 --> 00:04:09.958
between trying something new

00:04:09.982 --> 00:04:12.962
and going with something
that you already know is pretty good,

00:04:12.986 --> 00:04:14.536
whether it's listening to music

00:04:14.560 --> 00:04:17.194
or trying to decide
who you're going to spend time with.

00:04:17.218 --> 00:04:19.712
It's also the problem
that technology companies face

00:04:19.736 --> 00:04:23.403
when they're trying to do something
like decide what ad to show on a web page.

00:04:23.417 --> 00:04:25.989
Should they show a new ad
and learn something about it,

00:04:26.003 --> 00:04:27.386
or should they show you an ad

00:04:27.420 --> 00:04:30.726
that they already know there's a good
chance you're going to click on?

00:04:30.750 --> 00:04:31.901
Over the last 60 years,

00:04:31.925 --> 00:04:34.817
computer scientists have made
a lot of progress understanding

00:04:34.841 --> 00:04:36.293
the explore/exploit trade-off,

00:04:36.317 --> 00:04:38.715
and their results offer
some surprising insights.

00:04:39.291 --> 00:04:41.889
When you're trying to decide
what restaurant to go to,

00:04:41.913 --> 00:04:43.913
the first question you should ask yourself

00:04:43.937 --> 00:04:46.116
is how much longer
you're going to be in town.

00:04:46.505 --> 00:04:48.847
If you're just going to be there
for a short time,

00:04:48.871 --> 00:04:50.386
then you should exploit.

00:04:50.410 --> 00:04:52.315
There's no point gathering information.

00:04:52.339 --> 00:04:54.387
Just go to a place
you already know is good.

00:04:54.411 --> 00:04:57.340
But if you're going to be there
for a longer time, explore.

00:04:57.364 --> 00:04:59.751
Try something new,
because the information you get

00:04:59.775 --> 00:05:02.749
is something that can improve
your choices in the future.

00:05:02.773 --> 00:05:04.752
The value of information increases

00:05:04.776 --> 00:05:07.376
the more opportunities
you're going to have to use it.

00:05:08.193 --> 00:05:09.947
This principle can give us insight

00:05:09.971 --> 00:05:12.041
into the structure
of a human life as well.

00:05:13.104 --> 00:05:16.157
Babies don't have a reputation
for being particularly rational.

00:05:17.098 --> 00:05:18.923
They're always trying new things,

00:05:18.947 --> 00:05:21.783
and you know, trying to stick them
in their mouths.

00:05:22.621 --> 00:05:25.573
But in fact, this is exactly
what they should be doing.

00:05:25.597 --> 00:05:28.027
They're in the explore
phase of their lives,

00:05:28.051 --> 00:05:30.672
and some of those things
could turn out to be delicious.

00:05:32.040 --> 00:05:33.612
At the other end of the spectrum,

00:05:33.636 --> 00:05:36.142
the old guy who always goes
to the same restaurant

00:05:36.166 --> 00:05:37.801
and always eats the same thing

00:05:37.825 --> 00:05:39.153
isn't boring --

00:05:39.177 --> 00:05:40.686
he's optimal.

00:05:40.710 --> 00:05:44.540
(Laughter)

00:05:44.564 --> 00:05:46.792
He's exploiting the knowledge
that he's earned

00:05:46.816 --> 00:05:48.583
through a lifetime's experience.

00:05:50.406 --> 00:05:51.557
More generally,

00:05:51.581 --> 00:05:53.612
knowing about
the explore/exploit trade-off

00:05:53.636 --> 00:05:57.303
can make it a little easier for you
to sort of relax and go easier on yourself

00:05:57.327 --> 00:05:59.137
when you're trying to make a decision.

00:05:59.161 --> 00:06:01.889
You don't have to go
to the best restaurant every night.

00:06:01.913 --> 00:06:04.892
Take a chance, try something new, explore.

00:06:04.916 --> 00:06:06.543
You might learn something.

00:06:06.567 --> 00:06:08.156
And the information that you gain

00:06:08.180 --> 00:06:10.723
is going to be worth more
than one pretty good dinner.

00:06:12.178 --> 00:06:14.877
Computer science can also help
to make it easier on us

00:06:14.901 --> 00:06:17.053
in other places at home and in the office.

00:06:17.860 --> 00:06:20.313
If you've ever had
to tidy up your wardrobe,

00:06:20.337 --> 00:06:23.008
you've run into a particularly
agonizing decision:

00:06:23.032 --> 00:06:25.414
you have to decide what things
you're going to keep

00:06:25.438 --> 00:06:27.447
and what things you're going to give away.

00:06:27.974 --> 00:06:30.974
Martha Stewart turns out
to have thought very hard about this --

00:06:30.998 --> 00:06:32.203
(Laughter)

00:06:32.227 --> 00:06:33.905
and she has some good advice.

00:06:33.929 --> 00:06:36.224
She says, "Ask yourself four questions:

00:06:36.248 --> 00:06:37.774
How long have I had it?

00:06:37.798 --> 00:06:39.248
Does it still function?

00:06:39.272 --> 00:06:42.471
Is it a duplicate
of something that I already own?

00:06:42.495 --> 00:06:44.906
And when was the last time
I wore it or used it?"

00:06:46.648 --> 00:06:48.363
But there's another group of experts

00:06:48.387 --> 00:06:51.517
who perhaps thought
even harder about this problem,

00:06:51.541 --> 00:06:55.201
and they would say one of these questions
is more important than the others.

00:06:55.819 --> 00:06:56.969
Those experts?

00:06:57.281 --> 00:07:00.129
The people who design
the memory systems of computers.

00:07:00.153 --> 00:07:02.407
Most computers have
two kinds of memory systems:

00:07:02.431 --> 00:07:03.818
a fast memory system,

00:07:03.842 --> 00:07:07.011
like a set of memory chips
that has limited capacity,

00:07:07.035 --> 00:07:09.087
because those chips are expensive,

00:07:09.111 --> 00:07:12.371
and a slow memory system,
which is much larger.

00:07:13.239 --> 00:07:16.239
In order for the computer to operate
as efficiently as possible,

00:07:16.263 --> 00:07:17.414
you want to make sure

00:07:17.438 --> 00:07:19.790
that the pieces of information
you want to access

00:07:19.814 --> 00:07:21.291
are in the fast memory system,

00:07:21.315 --> 00:07:23.069
so that you can get to them quickly.

00:07:23.093 --> 00:07:25.154
Each time you access
a piece of information,

00:07:25.178 --> 00:07:26.703
it's loaded into the fast memory

00:07:26.727 --> 00:07:30.604
and the computer has to decide which item
it has to remove from that memory,

00:07:30.628 --> 00:07:32.369
because it has limited capacity.

00:07:33.794 --> 00:07:34.945
Over the years,

00:07:34.969 --> 00:07:37.708
computer scientists have tried
a few different strategies

00:07:37.732 --> 00:07:40.024
for deciding what to remove
from the fast memory.

00:07:40.048 --> 00:07:43.224
They've tried things like choosing
something at random

00:07:43.248 --> 00:07:46.154
or applying what's called
the "first-in, first-out principle,"

00:07:46.178 --> 00:07:47.577
which means removing the item

00:07:47.601 --> 00:07:49.777
which has been in the memory
for the longest.

00:07:50.091 --> 00:07:52.804
But the strategy that's most effective

00:07:52.828 --> 00:07:56.057
focuses on the items
which have been least recently used.

00:07:56.972 --> 00:08:00.163
This says if you're going to decide
to remove something from memory,

00:08:00.187 --> 00:08:05.155
you should take out the thing which was
last accessed the furthest in the past.

00:08:05.179 --> 00:08:07.338
And there's a certain
kind of logic to this.

00:08:07.362 --> 00:08:10.960
If it's been a long time since you last
accessed that piece of information,

00:08:10.984 --> 00:08:12.746
it's probably going to be a long time

00:08:12.770 --> 00:08:14.962
before you're going to need
to access it again.

00:08:15.787 --> 00:08:18.561
Your wardrobe is just like
the computer's memory.

00:08:18.585 --> 00:08:20.615
You have limited capacity,

00:08:20.639 --> 00:08:25.966
and you need to try and get in there
the things that you're most likely to need

00:08:25.990 --> 00:08:28.409
so that you can get to them
as quickly as possible.

00:08:29.016 --> 00:08:30.167
Recognizing that,

00:08:30.191 --> 00:08:33.004
maybe it's worth applying
the least recently used principle

00:08:33.028 --> 00:08:34.977
to organizing your wardrobe as well.

00:08:35.001 --> 00:08:37.083
So if we go back
to Martha's four questions,

00:08:37.107 --> 00:08:39.968
the computer scientists
would say that of these,

00:08:39.992 --> 00:08:41.933
the last one is the most important.

00:08:43.473 --> 00:08:45.528
This idea of organizing things

00:08:45.552 --> 00:08:48.681
so that the things you are most
likely to need are most accessible

00:08:48.705 --> 00:08:50.381
can also be applied in your office.

00:08:51.091 --> 00:08:53.021
The Japanese economist Yukio Noguchi

00:08:53.045 --> 00:08:56.100
actually invented a filing system
that has exactly this property.

00:08:57.161 --> 00:08:58.770
He started with a cardboard box,

00:08:58.794 --> 00:09:01.734
and he put his documents into the box
from the left-hand side.

00:09:02.067 --> 00:09:03.501
Each time he'd add a document,

00:09:03.525 --> 00:09:05.146
he'd move what was in there along

00:09:05.170 --> 00:09:07.980
and he'd add that document
to the left-hand side of the box.

00:09:08.004 --> 00:09:10.671
And each time he accessed
a document, he'd take it out,

00:09:10.695 --> 00:09:13.303
consult it and put it back in
on the left-hand side.

00:09:13.327 --> 00:09:16.608
As a result, the documents would be
ordered from left to right

00:09:16.632 --> 00:09:18.393
by how recently they had been used.

00:09:18.417 --> 00:09:21.191
And he found he could quickly find
what he was looking for

00:09:21.215 --> 00:09:23.269
by starting at the left-hand
side of the box

00:09:23.293 --> 00:09:24.865
and working his way to the right.

00:09:25.215 --> 00:09:27.836
Before you dash home
and implement this filing system --

00:09:27.860 --> 00:09:29.591
(Laughter)

00:09:29.615 --> 00:09:32.253
it's worth recognizing
that you probably already have.

00:09:32.891 --> 00:09:36.201
(Laughter)

00:09:36.225 --> 00:09:39.091
That pile of papers on your desk ...

00:09:39.115 --> 00:09:41.589
typically maligned
as messy and disorganized,

00:09:41.613 --> 00:09:44.178
a pile of papers is, in fact,
perfectly organized --

00:09:44.202 --> 00:09:45.202
(Laughter)

00:09:45.226 --> 00:09:47.240
as long as you, when you take a paper out,

00:09:47.264 --> 00:09:49.696
put it back on the top of the pile,

00:09:49.720 --> 00:09:52.546
then those papers are going
to be ordered from top to bottom

00:09:52.570 --> 00:09:54.122
by how recently they were used,

00:09:54.146 --> 00:09:56.847
and you can probably quickly find
what you're looking for

00:09:56.871 --> 00:09:58.571
by starting at the top of the pile.

00:09:59.988 --> 00:10:01.836
Organizing your wardrobe or your desk

00:10:01.860 --> 00:10:04.541
are probably not the most pressing
problems in your life.

00:10:05.588 --> 00:10:09.190
Sometimes the problems we have to solve
are simply very, very hard.

00:10:09.716 --> 00:10:10.866
But even in those cases,

00:10:10.890 --> 00:10:12.911
computer science can offer some strategies

00:10:12.935 --> 00:10:14.604
and perhaps some solace.

00:10:16.048 --> 00:10:19.123
The best algorithms are about doing
what makes the most sense

00:10:19.147 --> 00:10:20.649
in the least amount of time.

00:10:22.627 --> 00:10:24.585
When computers face hard problems,

00:10:24.609 --> 00:10:27.371
they deal with them by making them
into simpler problems --

00:10:27.395 --> 00:10:28.741
by making use of randomness,

00:10:28.765 --> 00:10:32.582
by removing constraints
or by allowing approximations.

00:10:32.606 --> 00:10:34.100
Solving those simpler problems

00:10:34.124 --> 00:10:37.044
can give you insight
into the harder problems,

00:10:37.068 --> 00:10:40.099
and sometimes produces
pretty good solutions in their own right.

00:10:41.658 --> 00:10:45.227
Knowing all of this has helped me
to relax when I have to make decisions.

00:10:45.251 --> 00:10:48.506
You could take the 37 percent rule
for finding a home as an example.

00:10:49.015 --> 00:10:51.717
There's no way that you can
consider all of the options,

00:10:51.741 --> 00:10:53.321
so you have to take a chance.

00:10:53.888 --> 00:10:56.748
And even if you follow
the optimal strategy,

00:10:56.772 --> 00:10:58.703
you're not guaranteed a perfect outcome.

00:10:59.198 --> 00:11:01.352
If you follow the 37 percent rule,

00:11:01.376 --> 00:11:04.655
the probability that you find
the very best place is --

00:11:04.679 --> 00:11:06.187
funnily enough ...

00:11:06.211 --> 00:11:07.225
(Laughter)

00:11:07.249 --> 00:11:08.669
37 percent.

00:11:09.966 --> 00:11:11.655
You fail most of the time.

00:11:12.522 --> 00:11:14.266
But that's the best that you can do.

00:11:14.846 --> 00:11:17.898
Ultimately, computer science
can help to make us more forgiving

00:11:17.922 --> 00:11:19.831
of our own limitations.

00:11:20.333 --> 00:11:22.872
You can't control outcomes,
just processes.

00:11:22.896 --> 00:11:25.015
And as long as you've used
the best process,

00:11:25.039 --> 00:11:26.802
you've done the best that you can.

00:11:26.826 --> 00:11:30.514
Sometimes those best processes
involve taking a chance --

00:11:30.538 --> 00:11:32.653
not considering all of your options,

00:11:32.677 --> 00:11:35.406
or being willing to settle
for a pretty good solution.

00:11:35.430 --> 00:11:38.780
These aren't the concessions
that we make when we can't be rational --

00:11:38.804 --> 00:11:40.433
they're what being rational means.

00:11:40.833 --> 00:11:41.984
Thank you.

00:11:42.008 --> 00:11:46.555
(Applause)

