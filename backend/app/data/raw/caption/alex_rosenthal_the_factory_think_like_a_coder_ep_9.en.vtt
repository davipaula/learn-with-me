WEBVTT
Kind: captions
Language: en

00:00:32.447 --> 00:00:37.002
After a harrowing chase, 
Ethic, Hedge, and their new ally Lemma

00:00:37.002 --> 00:00:44.506
find themselves 
in a cavernous control room.

00:00:44.506 --> 00:00:47.826
Here the last artifact—
the Node of Memory—

00:00:47.826 --> 00:00:52.664
is suspended within a force field 
and powering a supercomputer.

00:00:52.664 --> 00:00:57.473
Ethic is about to deactivate the force
field when Lemma stops her.

00:00:57.473 --> 00:01:02.382
She explains, a decade ago, 
she was assigned a research task:

00:01:02.382 --> 00:01:07.309
to use the world machine to create 
something that would make everyone happy.

00:01:07.309 --> 00:01:12.357
After many failed attempts, Lemma 
discovered a compound that, when ingested,

00:01:12.357 --> 00:01:19.034
made people motivated, happy, creative, 
loving… in short, their best selves.

00:01:19.034 --> 00:01:21.074
It was rushed into production.

00:01:21.074 --> 00:01:24.744
Soon, the entire nation’s food supply 
came from Huxenborg,

00:01:24.744 --> 00:01:27.534
with the compound mixed in.

00:01:27.534 --> 00:01:29.504
The first year was paradise.

00:01:29.504 --> 00:01:31.654
The second, not so much.

00:01:31.654 --> 00:01:36.952
Side-effects began to emerge: memory-loss,
listlessness, and self-absorption.

00:01:36.952 --> 00:01:39.792
In the third year, 
the government dissolved,

00:01:39.792 --> 00:01:44.380
leaving the robots running everything 
in a self-sustaining loop.

00:01:44.380 --> 00:01:48.270
By this point things were too far gone
for Lemma to reverse.

00:01:48.270 --> 00:01:51.120
People had become dependent 
on the compound,

00:01:51.120 --> 00:01:55.484
and the few who refused it 
formed a resistance to try to fix things.

00:01:55.484 --> 00:01:58.584
It took 10 years for Lemma to find a cure.

00:01:58.584 --> 00:02:02.474
This factory contains everything 
she’ll need to make it,

00:02:02.474 --> 00:02:04.714
but the second they take 
the Node of Memory,

00:02:04.714 --> 00:02:08.956
the security system will alert the robots,
and they’ll have to run.

00:02:08.956 --> 00:02:14.139
If, instead, they first reconfigure 
the factory to manufacture the cure,

00:02:14.139 --> 00:02:16.349
the people can be saved.

00:02:16.349 --> 00:02:19.809
Lemma has the whole factory redesign 
planned out.

00:02:19.809 --> 00:02:22.629
The problem is… 
it’s a little hard to read.

00:02:22.629 --> 00:02:26.249
Her schematic shows all the steps 
in the manufacturing process

00:02:26.249 --> 00:02:27.929
needed to make the cure.

00:02:27.929 --> 00:02:31.809
An arrow from “add nitric acid” 
to “shake vigorously”

00:02:31.809 --> 00:02:35.679
means that the acid addition 
has to happen before shaking.

00:02:35.679 --> 00:02:38.349
If a single step is performed 
out of order,

00:02:38.349 --> 00:02:41.059
the cure won’t work, or worse.

00:02:41.059 --> 00:02:45.711
There aren’t any circular references,
where step A requires step B

00:02:45.711 --> 00:02:50.145
and step B eventually requires step A.

00:03:04.771 --> 00:03:07.431
Here’s where Ethic and Hedge come in.

00:03:07.431 --> 00:03:10.959
Lemma needs Hedge to translate 
the tangled diagram

00:03:10.959 --> 00:03:13.179
into a sequence of steps.

00:03:13.179 --> 00:03:16.169
That’ll be the order that things happen 
in the factory.

00:03:16.169 --> 00:03:18.449
Once input into the central computer,

00:03:18.449 --> 00:03:22.149
the factory will reassemble 
itself as instructed.

00:03:22.149 --> 00:03:25.979
Hedge’s ability to store information 
in a table will help here.

00:03:25.979 --> 00:03:30.536
So how does Ethic program Hedge 
to turn out a correct sequence

00:03:30.536 --> 00:03:32.871
that can reconfigure the factory?

00:03:32.871 --> 00:03:34.743
Pause now to figure it out yourself.

00:03:34.743 --> 00:03:35.593
Rules in 3

00:03:35.593 --> 00:03:36.561
Rules in 2

00:03:36.561 --> 00:03:37.481
Rules in 1

00:03:39.470 --> 00:03:40.491
Hint in 3

00:03:40.491 --> 00:03:41.466
Hint in 2

00:03:41.466 --> 00:03:42.611
Hint in 1

00:03:42.611 --> 00:03:46.510
It may help to first think about 
this problem as a human,

00:03:46.510 --> 00:03:48.160
rather than a machine.

00:03:48.160 --> 00:03:52.321
Given this diagram, it’s clear to start 
with getting a bowl,

00:03:52.321 --> 00:03:55.101
since no arrows point to it.

00:03:55.101 --> 00:03:59.641
How might you mark up the diagram 
to figure out what to do next?

00:03:59.641 --> 00:04:01.611
Pause now to figure it out yourself.

00:04:01.611 --> 00:04:02.491
Solution in 3

00:04:02.491 --> 00:04:03.511
Solution in 2

00:04:03.511 --> 00:04:04.637
Solution in 1

00:04:04.637 --> 00:04:11.240
Diagrams like the one Lemma has drawn
are called directed acyclic graphs.

00:04:11.240 --> 00:04:15.240
A graph is a representation of data 
that shows different elements

00:04:15.240 --> 00:04:17.497
and how they’re related to each other.

00:04:17.497 --> 00:04:23.231
Directed means that direction matters—
as indicated by the arrows.

00:04:23.231 --> 00:04:27.429
Here A leads to B, 
but B doesn’t lead to A.

00:04:27.429 --> 00:04:31.149
And acyclic means that there 
aren’t any loops.

00:04:31.149 --> 00:04:36.228
Which is fortunate, because if there were,
this problem wouldn’t be solvable.

00:04:36.228 --> 00:04:39.708
There’s a simple way to navigate 
the graph as a human:

00:04:39.708 --> 00:04:43.418
start with a step that doesn’t have 
any arrows pointing to it.

00:04:43.418 --> 00:04:48.308
Once you do that, cross out that step 
and all arrows leading from it.

00:04:48.308 --> 00:04:51.538
Choose another step with no arrows 
pointing to it,

00:04:51.538 --> 00:04:55.218
and repeat until you’ve hit every step.

00:04:55.218 --> 00:04:59.218
There are two things here that are tricky
to translate for a robot.

00:04:59.218 --> 00:05:02.178
First, how do you keep track 
of the information?

00:05:02.178 --> 00:05:07.499
And second, what do you do if there
are multiple options at the same time?

00:05:07.499 --> 00:05:08.749
For the first challenge,

00:05:08.749 --> 00:05:12.989
a convenient way for machines 
to store information is in a table.

00:05:12.989 --> 00:05:16.989
In this case, you can have Hedge 
list every step in the headers

00:05:16.989 --> 00:05:19.739
of both the rows and columns.

00:05:19.739 --> 00:05:22.649
Then he can go through 
the rows one at a time.

00:05:22.649 --> 00:05:25.510
On the schematic, what points to mix?

00:05:25.510 --> 00:05:27.860
Both shake and titrate.

00:05:27.860 --> 00:05:31.400
So Hedge should make a mark 
in both of their columns.

00:05:31.400 --> 00:05:36.558
He can do the same for every row, 
one at a time, to make a table like this.

00:05:36.558 --> 00:05:40.558
Of course the full table 
will be much bigger.

00:05:40.558 --> 00:05:43.048
Like a human, 
Hedge will also want to start

00:05:43.048 --> 00:05:46.528
from one of the steps that has 
no arrows pointing to it—

00:05:46.528 --> 00:05:50.743
which is the same as having no marks 
in its row.

00:05:50.743 --> 00:05:52.033
If there’s more than one,

00:05:52.033 --> 00:05:56.795
a convenient way to choose is to pick 
the one that’s alphabetically earliest,

00:05:56.795 --> 00:06:00.860
though other selection methods 
can work just as well.

00:06:00.860 --> 00:06:04.860
Next, Hedge can add that step 
to his running-order list,

00:06:04.860 --> 00:06:07.310
delete its entire column from the table—

00:06:07.310 --> 00:06:10.340
thus removing all the times 
it was a dependency––

00:06:10.340 --> 00:06:12.990
and loop back to the start.

00:06:12.990 --> 00:06:16.290
Because there are no circular 
references in the graph,

00:06:16.290 --> 00:06:21.864
each time we get here there’ll be at least
one step with no remaining dependencies.

00:06:21.864 --> 00:06:26.556
Hedge can add the alphabetically earliest 
to his running-order list,

00:06:26.556 --> 00:06:31.221
remove it from the table, 
and loop back to the start again.

00:06:31.221 --> 00:06:33.241
So now we have a working loop,

00:06:33.241 --> 00:06:38.083
and it’ll run through all the elements 
in our table until none are left.

00:06:38.083 --> 00:06:41.093
Hedge drifts back and forth 
over the schematics,

00:06:41.093 --> 00:06:44.063
and soon he starts spitting 
out instructions,

00:06:44.063 --> 00:06:47.293
which Ethic uses to configure 
the assembly lines.

00:06:55.794 --> 00:06:57.554
With the three working together,

00:06:57.554 --> 00:07:01.264
they churn out thousands of doses 
of the cure in no time.

00:07:14.285 --> 00:07:16.685
Ethic finally plucks the Node of Memory

00:07:16.685 --> 00:07:19.655
from its holding field 
and trips the alarm.

00:07:19.655 --> 00:07:22.525
Within seconds bots are everywhere.

00:08:02.272 --> 00:08:07.309
As Ethic falls in shock, the Node 
restores not only her own memories,

00:08:07.309 --> 00:08:11.394
but reveals the last, missing pieces
of the puzzle.

00:08:11.394 --> 00:08:14.264
Ethic built Hedge with a singular purpose:

00:08:14.264 --> 00:08:17.686
to construct a maze that would protect 
the world machine

00:08:17.686 --> 00:08:19.486
from a corrupt government.

00:08:19.486 --> 00:08:22.567
But in her haste, 
she made a critical mistake.

00:08:22.567 --> 00:08:25.787
She forgot to set the condition 
that would end the loop

00:08:25.787 --> 00:08:29.216
which told Hedge 
how large the maze should be.

00:08:29.216 --> 00:08:33.833
So Hedge built and built 
until he could build no longer.

00:08:33.833 --> 00:08:35.593
And then he was conflicted.

00:08:35.593 --> 00:08:37.293
He had to build a maze.

00:08:37.293 --> 00:08:40.513
But he couldn’t build further 
without hurting people

00:08:40.513 --> 00:08:42.823
or flying over the Bradbarrier,

00:08:42.823 --> 00:08:45.323
both forbidden by his programming.

00:08:45.323 --> 00:08:48.653
So he wandered the land 
and searched for a solution,

00:08:48.653 --> 00:08:52.783
until he happened upon the Node of Power, 
the Node of Creation,

00:08:52.783 --> 00:08:55.123
and the Node of Memory.

00:08:55.123 --> 00:08:57.853
He recognized their true, 
collective power

00:08:57.853 --> 00:09:00.863
to grant self-awareness 
to those who lack it.

00:09:00.863 --> 00:09:03.773
With all three he’d be able 
to change his programming

00:09:03.773 --> 00:09:09.024
and fulfill his drive to transform 
the entire world into a giant maze.

00:09:09.024 --> 00:09:10.674
It wouldn’t be easy:

00:09:10.674 --> 00:09:15.419
the Nodes had safeguards to prevent 
robots from taking and using them.

00:09:15.419 --> 00:09:18.189
But if Hedge could find the right human

00:09:18.189 --> 00:09:22.189
and manipulate her 
with the promise of a heroic quest…

00:09:22.189 --> 00:09:24.479
well that would be a different story.

00:09:24.479 --> 00:09:27.039
A very different story.

